<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zad</groupId>
    <artifactId>TestJava</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>Test-RMI</module>
        <module>Test-JDK8</module>
        <module>Test-AXURE</module>
        <module>Test-ZK</module>
        <module>Test-Redis</module>
        <module>Test-Dubbo</module>
        <module>Test-Netty</module>
        <module>Test-activemq</module>
        <module>Test-Kafka</module>
        <module>Test-Tomcat</module>
        <module>Test-sql</module>
    </modules>
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>4.12</junit.version>
        <guava.version>26.0-jre</guava.version>
        <contiperf.version>2.3.4</contiperf.version>
        <commons-lang3.version>3.7</commons-lang3.version>
        <lombok.version>1.18.2</lombok.version>
        <slf4j-api.version>1.7.25</slf4j-api.version>
        <logback.version>1.2.3</logback.version>
        <junit-jupiter-api.version>5.2.0</junit-jupiter-api.version>
        <activemq.version>5.15.2</activemq.version>
        <netty.version>4.1.16.Final</netty.version>
        <fastjson.version>1.2.49</fastjson.version>
        <commons-pool2.version>2.6.0</commons-pool2.version>
        <jedis.version>2.9.0</jedis.version>
        <jjwt.version>0.9.1</jjwt.version>
        <joda-time.version>2.9.9</joda-time.version>
        <jackson-databind.version>2.9.8</jackson-databind.version>
        <pinyin4j.version>2.5.1</pinyin4j.version>
    </properties>
    <build>
        <plugins>
            <!-- 配置jdk1.8 对应的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>

            <!-- 各种工具类集合,包括Collection/IO 等等-->
            <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!--压力测试-->
            <!-- https://mvnrepository.com/artifact/org.databene/contiperf -->
            <dependency>
                <groupId>org.databene</groupId>
                <artifactId>contiperf</artifactId>
                <version>${contiperf.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- java.lang包的工具类 -->
            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- A testing framework for the JVM -->
            <!-- https://mvnrepository.com/artifact/org.testng/testng -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>RELEASE</version>
                <scope>compile</scope>
            </dependency>

            <!-- lombok插件,各种注解,简化代码 -->
            <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- 日志输出的门面facade,可用于切换日志输出引擎,定制日志输出格式,并设置日志输出级别 -->
            <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
           <!-- <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>-->

            <!-- 打印日志api,依赖于logback-core -->
            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- Module "junit-jupiter-api" of JUnit 5 -->
            <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter-api.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- redis java客户端 -->
            <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <!-- 配置数据连接池 -->
            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2 -->
            <!-- The Apache Commons Object Pooling Library -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>


            <!-- https://mvnrepository.com/artifact/org.apache.activemq/activemq-all -->
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-all</artifactId>
                <version>${activemq.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
            <!-- Fastjson is a JSON processor (JSON parser + JSON generator) written in Java -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
            <!-- JSON Web Token Support For The JVM -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
            <!-- Date and time library to replace JDK date handling -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.belerweb/pinyin4j -->
            <!--Support Chinese character (both Simplified and Tranditional) to most
            popular Pinyin systems, including Hanyu Pinyin, Tongyong Pinyin,
            Wade-Giles, MPS2, Yale and Gwoyeu Romatzyh.
            Support multiple pronounciations and customized output-->
            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>${pinyin4j.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
            <!-- General data-binding functionality for Jackson: works on core streaming API -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>


        </dependencies>
    </dependencyManagement>
</project>